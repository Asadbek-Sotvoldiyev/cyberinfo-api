services:
  web:
    build: .
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db

  bot:
    build: .
    command: python manage.py start_bot
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx-prod.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
      - letsencrypt:/etc/letsencrypt
      - certbot_challenge:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot_challenge:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email blogasadbek@gmail.com -d cyberinfo.uz -d www.cyberinfo.uz --agree-tos --non-interactive

volumes:
  postgres_data:
  static_volume:
  media_volume:
  letsencrypt:
  certbot_challenge:
